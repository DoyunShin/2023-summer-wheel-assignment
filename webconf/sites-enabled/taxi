server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name taxi.example.com;

    ssl_certificate /etc/letsencrypt/live/taxi.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/taxi.example.com/privkey.pem;
    include /etc/nginx/ssl/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl-dhparams.pem;

    location / {
        proxy_pass http://tc;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    location /api {
        proxy_pass http://ts;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name taxi.example.com;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    return 301 https://$host$request_uri;
}

upstream tc {
    server taxi-client:80;
}

upstream ts {
    server taxi-server:80;
}